buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }

  dependencies {
    classpath 'com.palominolabs.gradle.task:gradle-git-clone-task:0.0.2'
  }
}

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.3.5'
    id "org.jetbrains.grammarkit" version "2018.1.7"
    id 'checkstyle'

}
group 'net.sjrx.intellij.plugins'
version '0.1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
  testCompile group: 'junit', name: 'junit', version: '4.12'
}

intellij {
    version '2018.2'
}
patchPluginXml {
    changeNotes """
      Add change notes here.<br>
      <em>most HTML tags may be used</em>"""
}

// Add generated sources root
sourceSets.main.java.srcDirs += 'src/main/gen'

apply plugin: "idea"

idea {
  module {
    generatedSourceDirs += file('src/main/gen')

    downloadJavadoc = true
    downloadSources = true
  }
}
/*
 * CI Tasks
 */
checkstyle {
  // Exclude the generated sources
  checkstyleMain.source = "src/main/java"
  toolVersion "8.11"

}


/*
 * Build Tasks
 */

import com.palominolabs.gradle.task.git.clone.GitCloneTask

task cloneSystemdRepo(type: GitCloneTask) {
  dir = file("git-dependencies/systemd")
  uri = 'https://github.com/systemd/systemd.git'
  treeish = 'origin/master' // a commit hash, or tag name, or branch name (with remote prefix, like 'origin/master')
}

task extractValidKeys(type: ExtractValidKeysFromManPage) {
  systemdSourceCodeRoot = file("git-dependencies/systemd")
  generatedJsonFileLocation = file("src/main/resources/net/sjrx/intellij/plugins/systemdunitfiles/semanticdata")

}

/*
 * Lexing / Parsing and Grammar Tasks
 */

apply plugin: 'org.jetbrains.grammarkit'
// import is optional to make task creation easier
import org.jetbrains.grammarkit.tasks.*

task generateLexer(type: GenerateLexer) {
  source = "src/main/resources/net/sjrx/intellij/plugins/systemdunitfiles/lexer/SystemdUnitFile.flex"
  targetDir = "src/main/gen/net/sjrx/intellij/plugins/systemdunitfiles/generated/"
  targetClass = "UnitFileLexer"
  purgeOldFiles = true
}

task generateParser(type: GenerateParser) {
  source = "src/main/resources/net/sjrx/intellij/plugins/systemdunitfiles/grammar/SystemdUnitFile.bnf"
  targetRoot = "src/main/gen/"

  // path to a parser file, relative to the targetRoot
  pathToParser = 'src/main/gen/net/sjrx/intellij/plugins/systemdunitfiles/generated/UnitFileParser.java'

  // path to a directory with generated psi files, relative to the targetRoot
  pathToPsiRoot = 'src/main/gen/net/sjrx/intellij/plugins/systemdunitfiles/psi/'

  purgeOldFiles = true

  dependsOn generateLexer
}


generateLexer.mustRunAfter(compileJava)
classes.dependsOn += generateParser
